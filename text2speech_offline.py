import pyttsx3
import soundfile as sf
import numpy as np
from scipy.io import wavfile

def text_to_wav_offline(text, output_path="./data/input/generated_speech.wav"):
    """Convert text to WAV file using offline TTS"""
    # Initialize the TTS engine
    engine = pyttsx3.init()
    
    # Configure the engine
    engine.setProperty('rate', 150)    # Speed of speech
    engine.setProperty('volume', 1.0)  # Volume (0.0 to 1.0)
    
    # Save to WAV file
    engine.save_to_file(text, output_path)
    engine.runAndWait()
    
    # Resample to 16kHz if needed
    data, sr = sf.read(output_path)
    if sr != 16000:
        # Resample to 16kHz
        from scipy import signal
        new_len = int(len(data) * 16000 / sr)
        data = signal.resample(data, new_len)
        sf.write(output_path, data, 16000)
    
    return output_path

if __name__ == "__main__":
    # Your text to convert
    text = "This is sound generated by text"
    
    # Convert to WAV
    wav_path = text_to_wav_offline(text)
    
    print(f"WAV file generated at: {wav_path}")
    
    # You can now use this WAV file with demo.py
    print("\nNow you can run:")
    print(f"python demo.py --id Obama1 --driving_audio {wav_path} --device cpu") 